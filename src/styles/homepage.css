@keyframes fadeInUp {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

.fadeInUp {
	animation: fadeInUp 1s cubic-bezier(0.6, 0.6, 0, 1) backwards;
}

.staggered-children > * {
	animation: fadeInUp 1s cubic-bezier(0.6, 0.6, 0, 1) backwards;
	animation-delay: calc(var(--child-index) * 0.1s);
}

.autocomplete-properties:hover button:nth-of-type(1) {
	animation: bounceUp 2s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
}

.autocomplete-properties:hover button:nth-of-type(n + 2) {
	--animation-duration: calc(0.9s - var(--child-index) * 0.1s);
	--animation-delay: calc(1.1s + var(--child-index) * 0.1s);
	animation: bounceUp var(--animation-duration)
		cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
	animation-delay: var(--animation-delay);
}

.autocomplete-properties:hover button:nth-of-type(1) .autocomplete-property {
	animation: fadeInOut 2s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
}

.autocomplete-properties:hover
	button:nth-of-type(n + 2)
	.autocomplete-property {
	--animation-duration: calc(0.9s - var(--child-index) * 0.1s);
	--animation-delay: calc(1.1s + var(--child-index) * 0.1s);
	animation: fadeIn var(--animation-duration)
		cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
	animation-delay: var(--animation-delay);
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes fadeInOut {
	0% {
		opacity: 0;
	}
	50% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}

@keyframes bounceUp {
	0% {
		transform: translateY(0px);
	}
	50% {
		transform: translateY(-7px);
	}
	100% {
		transform: translateY(0);
	}
}

.cycle-text-container {
	height: 111px;
	overflow: hidden;
	mask-image: linear-gradient(to bottom, transparent, white 10%, white 98%, transparent);
}

.cycle-text p {
	padding-top: var(--padding-y);
	padding-bottom: var(--padding-y);
}

@property --rotate {
	syntax: "<angle>";
	initial-value: 132deg;
	inherits: false;
}

.animated-border::before {
	content: "";
	width: calc(100% + 2px);
	height: calc(100% + 2px);
	top: -1px;
	left: -1px;
	position: absolute;
	background: conic-gradient(from var(--rotate), hsl(var(--border)) 0deg 300deg, #4eb875 320deg, #dc6262 340deg, #7578e4 360deg);
	animation: rotation 10s linear infinite;
	border-radius: inherit;
	z-index: -1;
}

@keyframes rotation {
	from {
		--rotate: 0turn;
	}
	to {
		--rotate: 1turn;
	}
}

.alert-block {
	transform: translateZ(10px);
}